Print odd numbers in an array:


// Anonymous Function
const printOddNumbers = function(arr) {
  for (let num of arr) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  }
};

// IIFE
((arr) => {
  for (let num of arr) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  }
})([1, 2, 3, 4, 5, 6]);
-------------------------------------------------------------------------------------------------------------------
Convert all the strings to title caps in a string array:


// Anonymous Function
const convertToTitleCaps = function(arr) {
  return arr.map((str) => str.charAt(0).toUpperCase() + str.slice(1));
};

// IIFE
const titleCapsArray = ((arr) => {
  return arr.map((str) => str.charAt(0).toUpperCase() + str.slice(1));
})(["hello", "world", "example"]);

console.log(titleCapsArray);
------------------------------------------------------------------------------------------------------------------------
Sum of all numbers in an array:

// Anonymous Function
const sumArray = function(arr) {
  let sum = 0;
  for (let num of arr) {
    sum += num;
  }
  return sum;
};

// IIFE
const totalSum = ((arr) => {
  let sum = 0;
  for (let num of arr) {
    sum += num;
  }
  return sum;
})([1, 2, 3, 4, 5]);

console.log(totalSum);
-----------------------------------------------------------------------------------------------------------------------
Return all the prime numbers in an array:

// Anonymous Function
const getPrimeNumbers = function(arr) {
  const isPrime = function(num) {
    if (num <= 1) {
      return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return true;
  };

  return arr.filter((num) => isPrime(num));
};

// IIFE
const primeNumbers = ((arr) => {
  const isPrime = function(num) {
    if (num <= 1) {
      return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return true;
  };

  return arr.filter((num) => isPrime(num));
})([1, 2, 3, 4, 5, 6]);

console.log(primeNumbers);
----------------------------------------------------------------------------------------------------------------------
Return all the palindromes in an array:


// Anonymous Function
const getPalindromes = function(arr) {
  const isPalindrome = function(str) {
    return str === str.split('').reverse().join('');
  };

  return arr.filter((str) => isPalindrome(str));
};

// IIFE
const palindromes = ((arr) => {
  const isPalindrome = function(str) {
    return str === str.split('').reverse().join('');
  };

  return arr.filter((str) => isPalindrome(str));
})(["madam", "hello", "level", "world"]);

console.log(palindromes);
-------------------------------------------------------------------------------------------------------------------
Return median of two sorted arrays of the same size:

// Anonymous Function
const getMedianOfSortedArrays = function(arr1, arr2) {
  const mergedArr = arr1.concat(arr2);
  const sortedArr = mergedArr.sort((a, b) => a - b);
  const midIndex = Math.floor(sortedArr.length / 2);
  
  if (sortedArr.length % 2 === 0) {
    return (sortedArr[midIndex - 1] + sortedArr[midIndex]) / 2;
  } else {
    return sortedArr[midIndex];
  }
};

//IIFE
const median = ((arr1, arr2) => {
  const mergedArr = arr1.concat(arr2);
  const sortedArr = mergedArr.sort((a, b) => a - b);
  const midIndex = Math.floor(sortedArr.length / 2);

  if (sortedArr.length % 2 === 0) {
    return (sortedArr[midIndex - 1] + sortedArr[midIndex]) / 2;
  } else {
    return sortedArr[midIndex];
  }
})([1, 2, 3, 4], [5, 6, 7, 8]);

console.log(median);
--------------------------------------------------------------------------------------------------------------------
Remove duplicates from an array:


// Anonymous Function
const removeDuplicates = function(arr) {
  return arr.filter((value, index) => arr.indexOf(value) === index);
};

// IIFE
const uniqueArray = ((arr) => {
  return arr.filter((value, index) => arr.indexOf(value) === index);
})([1, 2, 2, 3, 4, 4, 5]);

console.log(uniqueArray);
Rotate an array by k times:
-------------------------------------------------------------------------------------------------------------------
Rotate an array by k times

// Anonymous Function
const rotateArray = function(arr, k) {
  for (let i = 0; i < k; i++) {
    arr.unshift(arr.pop());
  }
  return arr;
};

// IIFE
const rotatedArray = ((arr, k) => {
  for (let i = 0; i < k; i++) {
    arr.unshift(arr.pop());
  }
  return arr;
})([1, 2, 3, 4, 5], 2);

console.log(rotatedArray);